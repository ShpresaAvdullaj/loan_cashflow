version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: ./manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app/
    ports:
      - "8000:8000"
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=loan_cashflow
      - SQL_USER=postgres
      - SQL_PASSWORD=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
    depends_on:
      - redis
      - db
  db:
    image: postgres:14-alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=loan_cashflow
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis:
    image: redis:7-alpine

  celery_worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A core worker -l INFO
    volumes:
      - .:/usr/src/app/
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=loan_cashflow
      - SQL_USER=postgres
      - SQL_PASSWORD=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0

    depends_on:
      - redis
      - db


  celery_beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A core beat -l INFO
    volumes:
      - .:/usr/src/app/
    depends_on:
      - redis
      - db


volumes:
  postgres_data: